#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# menu.py - provide menu file
# Copyright (C) Kuleshov Alexander 2010 <kuleshovmail@gmail.com>
# 
# main.py is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# main.py is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import gtk
import incedit

#
# application menu
#    
def init_menu():  
    agr = gtk.AccelGroup()
    incedit.Incedit.main_window.add_accel_group(agr)
 
    separator1 = gtk.SeparatorMenuItem()
    separator2 = gtk.SeparatorMenuItem()
    separator3 = gtk.SeparatorMenuItem()
 
    #main menu
    main_menu = gtk.MenuBar()
       
    #menu item's
    file_menu           = gtk.Menu()
    open_menu           = gtk.Menu()     
    save_menu           = gtk.Menu()   
    save_as_menu        = gtk.Menu()
    close_file_menu     = gtk.Menu()
    exit_menu           = gtk.Menu()
 
    #add sub-menu menu items
    file_item = gtk.MenuItem("File")
    file_item.set_submenu(file_menu)
        
    open_item = gtk.MenuItem("Open")
    open_item.set_submenu(open_menu)
    
    save_item = gtk.MenuItem("Save")
    save_item.set_submenu(save_menu)          
        
    save_as_item = gtk.MenuItem("Save as")
    save_as_item.set_submenu(save_as_menu)
        
    close_file_item = gtk.MenuItem("Close file")
    close_file_item.set_submenu(close_file_menu)
        
    exit_file_item = gtk.MenuItem("Exit")
    exit_file_item.set_submenu(exit_menu)
 
    #image file menu items
    file_new = gtk.ImageMenuItem(gtk.STOCK_NEW, agr)
    key,mod = gtk.accelerator_parse("<Control>n")
    file_new.add_accelerator("activate", agr, key, mod, gtk.ACCEL_VISIBLE)
 
    file_open = gtk.ImageMenuItem(gtk.STOCK_OPEN,agr)
    key,mod = gtk.accelerator_parse("<Control>o")
    file_open.add_accelerator("activate", agr, key, mod, gtk.ACCEL_VISIBLE)
        
    file_save = gtk.ImageMenuItem(gtk.STOCK_SAVE,agr)
    key, mod = gtk.accelerator_parse("<Control>s")
    file_save.add_accelerator("activate", agr, key, mod, gtk.ACCEL_VISIBLE)
 
    file_save_as = gtk.ImageMenuItem(gtk.STOCK_SAVE_AS,agr)
    key, mod = gtk.accelerator_parse("<Shift><Control>s")
    file_save_as.add_accelerator("activate", agr, key, mod, gtk.ACCEL_VISIBLE)
 
    file_close = gtk.ImageMenuItem(gtk.STOCK_CLOSE,agr)
    key, mod = gtk.accelerator_parse("<Control>w")
    file_close.add_accelerator("activate", agr, key, mod, gtk.ACCEL_VISIBLE)
  
    file_exit = gtk.ImageMenuItem(gtk.STOCK_QUIT,agr)
    key, mod = gtk.accelerator_parse("<Control>q")
    file_exit.add_accelerator("activate", agr, key, mod, gtk.ACCEL_VISIBLE)
 
    # add menu
    file_menu.append(file_new)
    file_menu.append(file_open)       
    file_menu.append(separator1)
    file_menu.append(file_save)
    file_menu.append(file_save_as)
    file_menu.append(separator2)
    file_menu.append(file_close)
    file_menu.append(separator3)
    file_menu.append(file_exit) 
 
    main_menu.append(file_item)
         
    #signals
    file_new.connect("activate",incedit.Incedit.new_file)
    file_open.connect("activate",incedit.Incedit.open_file)
    file_save.connect("activate",incedit.Incedit.save_file)
    file_save_as.connect("activate",incedit.Incedit.save_as_file)
    file_close.connect("activate",incedit.Incedit.close_file)
    file_exit.connect("activate",incedit.Incedit.exit)
 
    incedit.Incedit.vbox.pack_start(main_menu, False, False, 0)
    
    main_menu.show_all()
 
